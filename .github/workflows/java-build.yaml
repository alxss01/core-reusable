name: Java Build

on:
    workflow_call:
        inputs:
            sonar-enabled:
                required: true
                type: string
            dp-check-enabled:
                required: true
                type: string
        outputs:
            image-version:
                description: 'Image Docker version'
                value: ${{ jobs.build.outputs.version }}

jobs:
    build:
        runs-on: self-hosted
        outputs:
            version: ${{ steps.variables.outputs.version  }}
        env:
          SONAR_URL: 'http://localhost:9000'
        steps:
            - name: checkout repository
              uses: actions/checkout@v4
              
            - name: create variables
              id: variables
              run: |
                mvn=$(which mvn)
                echo $mvn
                version=$($mvn -f "${{ github.workspace }}/pom.xml" help:evaluate -Dexpression=project.version -q -DforceStdout)
                version=${version%-*}
                version="${version:0:3}.${{ github.run_number }}"
                echo "VersÃ£o do projeto: $version"
                echo "version=$version" >> $GITHUB_OUTPUT
                version=$($mvn -f "${{ github.workspace }}/pom.xml" help:evaluate -Dexpression=project.version -q -DforceStdout)
                groupId=$($mvn -f "${{ github.workspace }}/pom.xml" help:evaluate -Dexpression=project.groupId -q -DforceStdout)
                artifactId=$($mvn -f "${{ github.workspace }}/pom.xml" help:evaluate -Dexpression=project.artifactId -q -DforceStdout)
                echo "VERSION=$version" >> $GITHUB_ENV
                echo "GROUPID=$groupId" >> $GITHUB_ENV
                echo "ARTIFACTID=$artifactId" >> $GITHUB_ENV
                appName=$(echo "${{ github.repository }}" | awk -F'/' '{print $2}')
                echo "Name: $appName"
                echo "appName=$appName" >> $GITHUB_OUTPUT

            - name: Set Up Java
              uses: actions/setup-java@v4
              with:
                distribution: 'temurin'
                java-version: '17'
                cache: 'maven'
            - name: Build with Maven
              run: mvn -B package --file pom.xml

            - name: SonarQube
              uses: alxss01/action-sonar-composite@main
              with:
                sonarHostUrl: ${{ env.SONAR_URL }}
                sonarToken: ${{ secrets.SONAR_TOKEN }}
                projectBaseDir: '.'
            

            
            - name: Publish Nexus
              run: |
                  mvn deploy:deploy-file \
                    -Durl="http://localhost:8081" \
                    -Dfile=target/$ARTIFACTID.jar \
                    -DgroupId=$GROUPID \
                    -DartifactId=$ARTIFACTID \
                    -Dpackaging=jar \
                    -Dversion=${{ steps.variables.outputs.version }} \
                    -DrepositoryId="devops-maven-snapshot"

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            - name: Login to Docker Hub
              uses: docker/login-action@v3
              with:
                username: ${{ secrets.DOCKERHUB_USERNAME }}
                password: ${{ secrets.DOCKERHUB_TOKEN }}

            - name: Verificar se o arquivo JAR foi gerado
              run: ls -l target/

            - name: Docker Build
              run: docker build -t alexsouzasilva/${{ steps.variables.outputs.appName }}:${{ steps.variables.outputs.version }} .

            - name: Docker Push
              run: docker push alexsouzasilva/${{ steps.variables.outputs.appName }}:${{ steps.variables.outputs.version }}